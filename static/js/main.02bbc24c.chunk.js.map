{"version":3,"sources":["components/Ranking.js","actions/Ranking.js","containers/Ranking.js","containers/Nav.js","components/Nav.js","App.js","reducers/shopping.js","reducers/Ranking.js","index.js","createStore.js"],"names":["Ranking","this","props","onMount","categoryId","nextProps","onUpdate","_this$props","category","ranking","error","react_default","a","createElement","concat","name","map","item","i","Card_default","key","code","style","maxWidth","margin","Card","image","imageUrl","title","height","Typography_default","type","Button_default","raised","color","fullWidth","href","url","React","Component","defaultProps","startRequest","payload","receiveData","response","finishRequest","fetchRanking","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","categories","queryString","data","wrap","_context","prev","next","shopping","find","id","replace","abrupt","qs","stringify","appid","category_id","fetchJsonp","sent","json","t0","stop","_x","_x2","apply","arguments","connect","state","ownProps","actions","onClick","path","push","Drawer_default","List_default","width","List","button","to","primary","App","className","paddingLeft","Reboot_default","AppBar_default","left","Toolbar_default","containers_Nav","marginTop","padding","Switch","Route","component","render","Redirect","match","containers_Ranking","params","initialState","getRanking","itemLength","ResultSet","totalResultsReturned","index","Result","Code","Name","Url","Image","Medium","undefined","reducers_Ranking","length","action","objectSpread","history","createHistory","store","reduxCreateStore","combineReducers","reducers","router","routerReducer","applyMiddleware","logger","thunk","routerMiddleware","ReactDOM","es","react_router_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.02bbc24c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card, {CardMedia, CardContent, CardActions} from 'material-ui/Card';\r\nimport Typography from 'material-ui/Typography';\r\nimport Button from 'material-ui/Button';\r\n\r\nexport default class Ranking extends React.Component{\r\n    componentWillMount(){\r\n        this.props.onMount(this.props.categoryId);\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.categoryId !== nextProps.categoryId){\r\n            this.props.onUpdate(nextProps.categoryId);\r\n        }\r\n    }\r\n    render(){\r\n        const {category, ranking, error} = this.props;\r\n        return(\r\n            <div>\r\n                <h2>\r\n                    {\r\n                        typeof category !== 'undefined' ? `${category.name}のランキング` : ''\r\n                    }\r\n                </h2>\r\n                {(() => {\r\n                    if(error){\r\n                        return <p>エラーが発生しました。リロードしてください。</p>;\r\n                    }\r\n                    else if(typeof ranking === 'undefined'){\r\n                        return <p>読み込み中...</p>;\r\n                    }\r\n                    else{\r\n                        return ranking.map((item, i) => (\r\n                            <Card key={`ranking-item-${item.code}`}\r\n                                style={{maxWidth: '500px', margin: '32px auto'}}>\r\n                                <CardMedia image={item.imageUrl}\r\n                                    title={`${i + 1}位 ${item.name}`}\r\n                                    style={{height: '200px'}}/>\r\n                                <CardContent>\r\n                                    <Typography type=\"title\">\r\n                                        {`${i + 1}位 ${item.name}`}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button raised color=\"secondary\" fullWidth href={item.url}>\r\n                                        商品ページへ\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        ));\r\n                    }\r\n                })()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRanking.propTypes = {\r\n    categoryId: PropTypes.string,\r\n    onMount: PropTypes.func.isRequired,\r\n    onUpdate: PropTypes.func.isRequired,\r\n\r\n    category: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n    }),\r\n\r\n    ranking: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            code: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            url: PropTypes.string.isRequired,\r\n            imageUrl: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n\r\n    error: PropTypes.bool.isRequired,\r\n};\r\nRanking.defaultProps = {\r\n    categoryId: '1',\r\n};\r\n","import fetchJsonp from 'fetch-jsonp';\r\nimport qs from 'qs';\r\nimport {replace} from 'react-router-redux';\r\n\r\nconst API_URL = \"https://shopping.yahooapis.jp/ShoppingWebService/V1/json/categoryRanking\";\r\nconst APP_ID = \"dj00aiZpPXhUTDB0WDJHTGt3eiZzPWNvbnN1bWVyc2VjcmV0Jng9YTc-\";\r\n\r\nconst startRequest = (category) => ({\r\n    type: 'START_REQUEST',\r\n    payload: {category},\r\n});\r\n\r\nconst receiveData = (category, error, response) => ({\r\n    type: 'RECEIVE_DATA',\r\n    payload: {category, error, response},\r\n});\r\n\r\nconst finishRequest = (category) => ({\r\n    type: 'FINISH_REQUEST',\r\n    payload: {category},\r\n});\r\n\r\nexport const fetchRanking = (categoryId) => {\r\n    return async (dispatch, getState) => {\r\n        const categories = getState().shopping.categories;\r\n        const category = categories.find(category => (category.id === categoryId));\r\n        if(typeof category == 'undefined'){\r\n            dispatch(replace('/'));\r\n            return;\r\n        }\r\n        dispatch(startRequest(category));\r\n        const queryString = qs.stringify({\r\n            appid: APP_ID,\r\n            category_id: categoryId,\r\n        });\r\n        try{\r\n            const response = await fetchJsonp(`${API_URL}?${queryString}`);\r\n            const data = await response.json();\r\n            dispatch(receiveData(category, null, data));\r\n        }\r\n        catch(err){\r\n            dispatch(receiveData(category, err));\r\n        }\r\n        dispatch(finishRequest(category));\r\n    };\r\n};\r\n","import {connect} from 'react-redux';\r\nimport Ranking from '../components/Ranking';\r\nimport * as actions from '../actions/Ranking';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    categoryId: ownProps.categoryId,\r\n    category: state.Ranking.category,\r\n    ranking: state.Ranking.ranking,\r\n    error: state.Ranking.error\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onMount(categoryId){\r\n        dispatch(actions.fetchRanking(categoryId));\r\n    },\r\n    onUpdate(categoryId){\r\n        dispatch(actions.fetchRanking(categoryId));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);\r\n","import {connect} from 'react-redux';\r\nimport {push} from 'react-router-redux';\r\nimport Nav from '../components/Nav';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.shopping.categories\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onClick(path){\r\n        dispatch(push(path));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Drawer from 'material-ui/Drawer';\r\nimport List, {ListItem, ListItemText} from 'material-ui/List';\r\n\r\nexport default function Nav({categories, onClick}){\r\n    const to = (category) => (\r\n        category.id === '1'\r\n            ? '/all' : `/category/${category.id}`\r\n    );\r\n    return(\r\n        <Drawer type=\"permanent\">\r\n            <List style={{width: 240}}>\r\n                {categories.map(category => (\r\n                    <ListItem button \r\n                        key={`menu-item-${category.id}`}\r\n                        onClick={() => onClick(to(category))}>\r\n                        <ListItemText primary={category.name}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nNav.propTypes = {\r\n    categories: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Ranking from './containers/Ranking';\nimport Nav from './containers/Nav';\nimport Reboot from 'material-ui/Reboot';\nimport AppBar from 'material-ui/AppBar';\nimport Toolbar from 'material-ui/Toolbar';\nimport Typography from 'material-ui/Typography';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={{paddingLeft: 240}}>\n        <Reboot/>\n        <AppBar style={{left: 240}}>\n          <Toolbar>\n            <Typography type=\"title\" color=\"inherit\">\n              Yahoo!　ショッピングランキング\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Nav/>\n        <div style={{marginTop: 64, padding: 32}}>\n          <Switch>\n            <Route path=\"/all\" component={Ranking}/>\n            <Route path=\"/category/1\" render={() => <Redirect to=\"/all\"/>}/>\n            <Route path=\"/category/:id\" render={({match}) => <Ranking categoryId={match.params.id}/>}/>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\r\n    categories: [\r\n        {id: '1', name: 'すべてのカテゴリ'},\r\n        {id: '2502', name: 'パソコン、周辺機器'},\r\n        {id: '10002', name: '本、雑誌、コミック'},\r\n    ]\r\n};\r\n\r\nexport default () => initialState;\r\n","const getRanking = (response) => {\r\n    const ranking = [];\r\n    const itemLength = response.ResultSet.totalResultsReturned;\r\n    for(let index = 0; index < itemLength; index++){\r\n        const item = response.ResultSet['0'].Result[index + ''];\r\n        ranking.push({\r\n            code: item.Code,\r\n            name: item.Name,\r\n            url: item.Url,\r\n            imageUrl: item.Image.Medium\r\n        });\r\n    }\r\n    return ranking;\r\n};\r\n\r\nconst initialState = {\r\n    category: undefined,\r\n    ranking: undefined,\r\n    error: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'START_REQUEST':\r\n            return{\r\n                category: action.payload.category,\r\n                ranking: undefined,\r\n                error: false\r\n            };\r\n        case 'RECEIVE_DATA':\r\n            return action.payload.error\r\n                ? {...state, error: true}\r\n                : {...state, ranking: getRanking(action.payload.response)};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'react-router-redux';\nimport createHistory from 'history/createHashHistory';\nimport App from './App';\nimport createStore from './createStore';\n\nconst history = createHistory();\nconst store = createStore(history);\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App/>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","import{\r\n    createStore as reduxCreateStore,\r\n    combineReducers, applyMiddleware\r\n} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport {routerReducer, routerMiddleware} from 'react-router-redux';\r\nimport * as reducers from './reducers';\r\n\r\nexport default function createStore(history){\r\n    return reduxCreateStore(\r\n        combineReducers({\r\n            ...reducers,\r\n            router: routerReducer\r\n        }),\r\n        applyMiddleware(\r\n            logger,\r\n            thunk,\r\n            routerMiddleware(history)\r\n        )\r\n    );\r\n}\r\n"],"sourceRoot":""}